<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Engine</name>
    </assembly>
    <members>
        <member name="T:Engine.Board">
            <summary>
            Kelas yang merepresentasikan sebuah papan permainan.
            </summary>
        </member>
        <member name="P:Engine.Board.Snakes">
            <summary>
            Field untuk menyimpan dan mengembalikan semua snake
            </summary>
        </member>
        <member name="P:Engine.Board.Ladders">
            <summary>
            Field untuk menyimpan dan mengembalikan semua ladder
            </summary>
        </member>
        <member name="M:Engine.Board.#ctor">
            <summary>
            Constructor kelas Board.
            </summary>
        </member>
        <member name="M:Engine.Board.GenerateBoard">
            <summary>
            Method untuk meng-generate board
            Method ini menentukan posisi snake dan ladder di Tile
            </summary>
        </member>
        <member name="M:Engine.Board.IsValidSnakeLadder(Engine.Tile,Engine.Tile)">
            <summary>
            Method ini mengembalikan true bila snake atau ladder belum ada di t1 dan t2
            false bila snake atau ladder sudah ada di t1 dan t2
            </summary>
            <param name="t1"> tile yang ingin diperiksa</param>
            <param name="t2"> tile yang ingin diperiksa</param>
            <returns>true bila tidak ada snake atau ladder, false jika ada snake atau ladder</returns>
        </member>
        <member name="M:Engine.Board.GetTiles">
            <summary>
            Method untuk mendapatkan semua petak pada papan.
            </summary>
            <returns>Semua kotak/tile</returns>
        </member>
        <member name="M:Engine.Board.GetTile(System.Int32)">
            <summary>
            Method untuk mendapatkan petak dengan nomor tertentu
            </summary>
            <param name="num">Indeks petak yang akan dikembalikan</param>
            <returns>petak dengan nomor tertentu</returns>
        </member>
        <member name="T:Engine.Converter">
            <summary>
            Kelas ini digunakan untuk meng-convert posisi pemain ke x dan y
            </summary>
        </member>
        <member name="M:Engine.Converter.#ctor">
            <summary>
            Konstraktor, langsung memanggil method Convert
            </summary>
        </member>
        <member name="M:Engine.Converter.Convert(System.Int32)">
            <summary>
            Method untuk meng-convert position ke x dan y
            </summary>
            <param name="position">posisi yang ingin dikonversi</param>
        </member>
        <member name="M:Engine.Converter.GetX">
            <summary>
            Getter atribut x
            </summary>
            <returns>nilai x</returns>
        </member>
        <member name="M:Engine.Converter.GetY">
            <summary>
            Getter atribut y
            </summary>
            <returns>nilai y</returns>
        </member>
        <member name="T:Engine.Dice">
            <summary>
            Kelas yang merepresentasikan sebuah dadu.
            </summary>
        </member>
        <member name="M:Engine.Dice.#ctor(System.Int32)">
            <summary>
            Constructor kelas Dice dengan parameter.
            </summary>
             <param name="sides">Banyaknya sisi pada dadu</param>
        </member>
        <member name="M:Engine.Dice.#ctor">
            <summary>
            Constructor kelas Dice tanpa parameter.
            </summary>
        </member>
        <member name="M:Engine.Dice.RollDice">
            <summary>
            Method untuk mengocok dan mengembalikan nilai dadu.
            </summary>
            <returns>nilai dadu yang telah dikocok</returns>
        </member>
        <member name="T:Engine.Game">
            <summary>
             Kelas controller.
             yang menjalankan semua proses yang diperlukan untuk menjalankan game ini.
            </summary>
        </member>
        <member name="F:Engine.Game.papan">
            <summary>
             Atribut yang menyimpan board.
            </summary>
        </member>
        <member name="F:Engine.Game.players">
            <summary>
             Atribut yang menyimpan banyak player yang ada didalam game.
            </summary>
        </member>
        <member name="F:Engine.Game.winner">
            <summary>
             Atribut yang menyimpan object player yang menang.
            </summary>
        </member>
        <member name="F:Engine.Game.dice">
            <summary>
             Atribut yang menyimpan object Dice.
            </summary>
        </member>
        <member name="F:Engine.Game.totalPlayer">
            <summary>
             Atribut yang menyimpan int banyak player.
            </summary>
        </member>
        <member name="M:Engine.Game.#ctor(Engine.Board,Engine.Dice,System.Int32)">
            <summary>
             Konstruktor.
            </summary>
             <param name="b">objek board</param>
             <param name="d">objek dadu</param>
             <param name="gameType">tipe game</param>
        </member>
        <member name="M:Engine.Game.RunTheGame">
            <summary>
             Method untuk menjalankan permainan ular tangga.
            </summary>
        </member>
        <member name="M:Engine.Game.SetWinner(Engine.Player)">
            <summary>
            Method untuk menentukan pemenang.
            </summary>
            <param name="p">pemain yang menang</param>
        </member>
        <member name="M:Engine.Game.GetWinner">
            <summary>
            Getter untuk atribut winner
            </summary>
            <returns>pemain yang menang</returns>
        </member>
        <member name="M:Engine.Game.GetCurrentPlayer">
            <summary>
            Mengembalikan Player yang sedang bermain sekarang
            </summary>
            <returns>player yang sedang bermain</returns>
        </member>
        <member name="M:Engine.Game.GetWinnerInformation">
            <summary>
            Mengembalikan informasi nama pemenang.
            </summary>
            <returns>Nama pemenang</returns>
        </member>
        <member name="M:Engine.Game.GetCurrentTurn">
            <summary>
            Method untuk mengembalikan nomor giliran
            </summary>
            <returns>Nomor giliran</returns>
        </member>
        <member name="M:Engine.Game.GetPlayerAtTurn(System.Int32)">
            <summary>
            Method untuk mendapatkan pemain dengan giliran tertentu
            </summary>
            <param name="turn">Giliran pemain</param>
            <returns>Pemain dengan giliran tertentu</returns>
        </member>
        <member name="T:Engine.Ladder">
            <summary>
            Kelas ini diturunkan dari kelas Teleporter
            Kelas ini merepresentasikan sebuah Ladder
            </summary>
        </member>
        <member name="M:Engine.Ladder.#ctor(System.Int32,System.Int32)">
            <summary>
            Konstraktor
            </summary>
            <param name="head">posisi head ladder</param>
            <param name="tail">posisi tail ladder</param>
        </member>
        <member name="M:Engine.Ladder.MovePlayer(Engine.Player)">
            <summary>
            Method override untuk memindahkan player
            </summary>
            <param name="p">Pemain yang akan dipindahkan</param>
        </member>
        <member name="T:Engine.Player">
            <summary>
            Kelas ini merepresentasikan seorang Player
            </summary>
        </member>
        <member name="M:Engine.Player.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Konstraktor
            </summary>
            <param name="position"> posisi pemain</param>
            <param name="name"> nama pemain</param>
            <param name="isComp"> pemain merupakan komputer atau bukan</param>
        </member>
        <member name="M:Engine.Player.SetPosition(System.Int32)">
            <summary>
            Setter atribut position
            </summary>
            <param name="position"> posisi pemain yang baru</param>
        </member>
        <member name="M:Engine.Player.GetName">
            <summary>
            Getter atribut name
            </summary>
            <returns>nama pemain</returns>
        </member>
        <member name="M:Engine.Player.Move(Engine.Dice)">
            <summary>
            Method untuk menjalankan pemain
            </summary>
            <param name="d"> Objek dice</param>
        </member>
        <member name="M:Engine.Player.GetDiceNum">
            <summary>
            Method untuk mengembalikan nilai kocokan dadu
            </summary>
            <returns>Hasil kocokan dadu</returns>
        </member>
        <member name="M:Engine.Player.GetPosition">
            <summary>
            Getter atribut position
            </summary>
            <returns>posisi pemain</returns>
        </member>
        <member name="M:Engine.Player.IsWin">
            <summary>
            Mengembalikan nilai atribut win
            </summary>
            <returns>true jika posisi pemain di 99, false jika bukan</returns>
        </member>
        <member name="M:Engine.Player.IsCompPlayer">
            <summary>
            Mengembalikan nilai atribut isComp
            </summary>
            <returns>Atribut isComp</returns>
        </member>
        <member name="T:Engine.Snake">
            <summary>
            Kelas ini diturunkan dari kelas Teleporter
            Kelas ini merepresentasikan satu snake
            </summary>
        </member>
        <member name="M:Engine.Snake.#ctor(System.Int32,System.Int32)">
            <summary>
            Konstraktor
            </summary>
            <param name="head"> posisi kepala snake</param>
            <param name="tail"> posisi ekor snake</param>
        </member>
        <member name="M:Engine.Snake.MovePlayer(Engine.Player)">
            <summary>
            Method override untuk memindahkan player
            </summary>
            <param name="p"> Player yang ingin dipindahkan</param>
        </member>
        <member name="T:Engine.Teleporter">
            <summary>
            Kelas abstrak yang merepresentasikan ular atau tangga
            </summary>
        </member>
        <member name="P:Engine.Teleporter.Head">
            <summary>
            Field untuk mengganti atau mengembalikan nilai dari atribut privat head
            </summary>
        </member>
        <member name="P:Engine.Teleporter.Tail">
            <summary>
            Field untuk mengganti atau mengembalikan nilai dari atribut privat tail
            </summary>
        </member>
        <member name="M:Engine.Teleporter.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor kelas Teleporter
            </summary>
            <param name="head">Bagian kepala dari objek Teleporter</param>
            <param name="tail">Bagian ekor dari objek Teleporter</param>
        </member>
        <member name="M:Engine.Teleporter.MovePlayer(Engine.Player)">
            <summary>
            Method abstrak untuk memindahkan pemain
            </summary>
            <param name="p">Objek pemain yang akan dipindahkan</param>
        </member>
        <member name="T:Engine.Tile">
            <summary>
            Kelas yang merepresentasikan sebuah petak pada papan permainan
            </summary>
        </member>
        <member name="M:Engine.Tile.#ctor(System.Int32)">
            <summary>
            Constructor kelas Tile
            </summary>
            <param name="num">Indeks petak</param>
        </member>
        <member name="M:Engine.Tile.SetNumber(System.Int32)">
            <summary>
            Method untuk mengganti nomor indeks petak
            </summary>
            <param name="num">Indeks petak yang baru</param>
        </member>
        <member name="M:Engine.Tile.SetIsSnake(Engine.Teleporter)">
            <summary>
            Method untuk mengganti teleporter ular yang ada pada petak
            </summary>
            <param name="isSnake">Teleporter ular yang baru</param>
        </member>
        <member name="M:Engine.Tile.SetIsLadder(Engine.Teleporter)">
            <summary>
            Method untuk mengganti teleporter tangga yang ada pada petak
            </summary>
            <param name="isLadder">Teleporter tangga yang baru</param>
        </member>
        <member name="M:Engine.Tile.GetNumber">
            <summary>
            Method untuk mengembalikan indeks petak
            </summary>
            <returns>number tile</returns>
        </member>
        <member name="M:Engine.Tile.IsSnake">
            <summary>
            Method untuk mengembalikan teleporter ular yang ada
            </summary>
            <returns>teleporter ular</returns>
        </member>
        <member name="M:Engine.Tile.IsLadder">
            <summary>
            Method untuk mengembalikan teleporter tangga yang ada
            </summary>
            <returns>teleporter ladder</returns>
        </member>
        <member name="M:Engine.Tile.GetSnakeLadder">
            <summary>
            Method untuk mengembalikan teleporter yang ada
            </summary>
            <returns>teleporter</returns>
        </member>
    </members>
</doc>
